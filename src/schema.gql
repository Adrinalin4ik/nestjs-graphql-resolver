# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type SubcompetencyPrimitiveFieldType {
  id: Float
  title: String
  competency_id: Float
  date_time_with_timezone: DateTime
  created_at: DateTime
  updated_at: DateTime
  test_bool: Boolean
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type SubcompetencyGroupType {
  by: SubcompetencyPrimitiveFieldType
  count: Float
  fields: [Subcompetency!]
  avg: SubcompetencyPrimitiveFieldType
  sum: SubcompetencyPrimitiveFieldType
  max: SubcompetencyPrimitiveFieldType
  min: SubcompetencyPrimitiveFieldType
}

type Subcompetency {
  id: Int!
  title: String!
  competency_id: Int!
  competency(where: CompetencyEntityFilterInputType, order_by: CompetencyEntityOrderInputType): Competency
  user_subcompetencies(where: UserSubcompetencyEntityFilterInputType, order_by: UserSubcompetencyEntityOrderInputType): [Competency!]
  date_time_with_timezone: DateTime
  created_at: DateTime!
  updated_at: DateTime!
  test_bool: Boolean!
  groupAgg: [SubcompetencyGroupType!]
}

input CompetencyEntityFilterInputType {
  seniority: SeniorityEntityFilterInputType
  subcompetencies: SubcompetencyEntityFilterInputType
  user_competencies: UserCompetencyEntityFilterInputType
  id: Number_property_filter_type
  title: String_property_filter_type
  seniority_id: Number_property_filter_type
  and: [CompetencyEntityFilterInputType!]
  or: [CompetencyEntityFilterInputType!]
  avg: CompetencyEntityFilterInputType
  sum: CompetencyEntityFilterInputType
  count: CompetencyEntityFilterInputType
  max: CompetencyEntityFilterInputType
  min: CompetencyEntityFilterInputType
}

input SeniorityEntityFilterInputType {
  competencies: CompetencyEntityFilterInputType
  users: UserEntityFilterInputType
  id: Number_property_filter_type
  title: String_property_filter_type
  and: [SeniorityEntityFilterInputType!]
  or: [SeniorityEntityFilterInputType!]
  avg: SeniorityEntityFilterInputType
  sum: SeniorityEntityFilterInputType
  count: SeniorityEntityFilterInputType
  max: SeniorityEntityFilterInputType
  min: SeniorityEntityFilterInputType
}

input UserEntityFilterInputType {
  seniority: SeniorityEntityFilterInputType
  user_competencies: UserCompetencyEntityFilterInputType
  user_subcompetencies: UserSubcompetencyEntityFilterInputType
  tasks: TaskEntityFilterInputType
  id: Number_property_filter_type
  created_at: DateTime_property_filter_type
  updated_at: DateTime_property_filter_type
  identification_number: Number_property_filter_type
  email: String_property_filter_type
  fname: String_property_filter_type
  lname: String_property_filter_type
  mname: String_property_filter_type
  age: Number_property_filter_type
  phone: String_property_filter_type
  is_active: Boolean_property_filter_type
  seniority_id: Number_property_filter_type
  and: [UserEntityFilterInputType!]
  or: [UserEntityFilterInputType!]
  avg: UserEntityFilterInputType
  sum: UserEntityFilterInputType
  count: UserEntityFilterInputType
  max: UserEntityFilterInputType
  min: UserEntityFilterInputType
}

input UserCompetencyEntityFilterInputType {
  competency: CompetencyEntityFilterInputType
  user: UserEntityFilterInputType
  id: Number_property_filter_type
  competency_id: Number_property_filter_type
  user_id: Number_property_filter_type
  created_at: DateTime_property_filter_type
  updated_at: DateTime_property_filter_type
  and: [UserCompetencyEntityFilterInputType!]
  or: [UserCompetencyEntityFilterInputType!]
  avg: UserCompetencyEntityFilterInputType
  sum: UserCompetencyEntityFilterInputType
  count: UserCompetencyEntityFilterInputType
  max: UserCompetencyEntityFilterInputType
  min: UserCompetencyEntityFilterInputType
}

input Number_property_filter_type {
  eq: Float
  neq: Float
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  in: [Float!]
  ilike: Float
  notilike: Float
  between: [Float!]
  notbetween: [Float!]
  null: Boolean
  notnull: Boolean
}

input DateTime_property_filter_type {
  eq: DateTime
  neq: DateTime
  gt: DateTime
  gte: DateTime
  lt: DateTime
  lte: DateTime
  in: [DateTime!]
  ilike: DateTime
  notilike: DateTime
  between: [DateTime!]
  notbetween: [DateTime!]
  null: Boolean
  notnull: Boolean
}

input UserSubcompetencyEntityFilterInputType {
  subcompetency: SubcompetencyEntityFilterInputType
  user: UserEntityFilterInputType
  id: Number_property_filter_type
  subcompetency_id: Number_property_filter_type
  user_id: Number_property_filter_type
  created_at: DateTime_property_filter_type
  updated_at: DateTime_property_filter_type
  and: [UserSubcompetencyEntityFilterInputType!]
  or: [UserSubcompetencyEntityFilterInputType!]
  avg: UserSubcompetencyEntityFilterInputType
  sum: UserSubcompetencyEntityFilterInputType
  count: UserSubcompetencyEntityFilterInputType
  max: UserSubcompetencyEntityFilterInputType
  min: UserSubcompetencyEntityFilterInputType
}

input SubcompetencyEntityFilterInputType {
  competency: CompetencyEntityFilterInputType
  user_subcompetencies: UserSubcompetencyEntityFilterInputType
  id: Number_property_filter_type
  title: String_property_filter_type
  competency_id: Number_property_filter_type
  date_time_with_timezone: DateTime_property_filter_type
  created_at: DateTime_property_filter_type
  updated_at: DateTime_property_filter_type
  test_bool: Boolean_property_filter_type
  and: [SubcompetencyEntityFilterInputType!]
  or: [SubcompetencyEntityFilterInputType!]
  avg: SubcompetencyEntityFilterInputType
  sum: SubcompetencyEntityFilterInputType
  count: SubcompetencyEntityFilterInputType
  max: SubcompetencyEntityFilterInputType
  min: SubcompetencyEntityFilterInputType
}

input String_property_filter_type {
  eq: String
  neq: String
  gt: String
  gte: String
  lt: String
  lte: String
  in: [String!]
  ilike: String
  notilike: String
  between: [String!]
  notbetween: [String!]
  null: Boolean
  notnull: Boolean
}

input Boolean_property_filter_type {
  eq: Boolean
  neq: Boolean
  gt: Boolean
  gte: Boolean
  lt: Boolean
  lte: Boolean
  in: [Boolean!]
  ilike: Boolean
  notilike: Boolean
  between: [Boolean!]
  notbetween: [Boolean!]
  null: Boolean
  notnull: Boolean
}

input TaskEntityFilterInputType {
  assignee: UserEntityFilterInputType
  task: TaskEntityFilterInputType
  subtasks: TaskEntityFilterInputType
  id: Number_property_filter_type
  created_at: DateTime_property_filter_type
  updated_at: DateTime_property_filter_type
  title: String_property_filter_type
  description: String_property_filter_type
  type_id: Number_property_filter_type
  priority: Number_property_filter_type
  story_points: Number_property_filter_type
  status: Number_property_filter_type
  assignee_id: Number_property_filter_type
  task_id: Number_property_filter_type
  and: [TaskEntityFilterInputType!]
  or: [TaskEntityFilterInputType!]
  avg: TaskEntityFilterInputType
  sum: TaskEntityFilterInputType
  count: TaskEntityFilterInputType
  max: TaskEntityFilterInputType
  min: TaskEntityFilterInputType
}

input CompetencyEntityOrderInputType {
  seniority: SeniorityEntityOrderInputType
  subcompetencies: SubcompetencyEntityOrderInputType
  user_competencies: UserCompetencyEntityOrderInputType
  id: OrderTypeEnum
  title: OrderTypeEnum
  seniority_id: OrderTypeEnum
  avg: CompetencyEntityOrderInputType
  sum: CompetencyEntityOrderInputType
  count: CompetencyEntityOrderInputType
  max: CompetencyEntityOrderInputType
  min: CompetencyEntityOrderInputType
}

input SeniorityEntityOrderInputType {
  competencies: CompetencyEntityOrderInputType
  users: UserEntityOrderInputType
  id: OrderTypeEnum
  title: OrderTypeEnum
  avg: SeniorityEntityOrderInputType
  sum: SeniorityEntityOrderInputType
  count: SeniorityEntityOrderInputType
  max: SeniorityEntityOrderInputType
  min: SeniorityEntityOrderInputType
}

input UserEntityOrderInputType {
  seniority: SeniorityEntityOrderInputType
  user_competencies: UserCompetencyEntityOrderInputType
  user_subcompetencies: UserSubcompetencyEntityOrderInputType
  tasks: TaskEntityOrderInputType
  id: OrderTypeEnum
  created_at: OrderTypeEnum
  updated_at: OrderTypeEnum
  identification_number: OrderTypeEnum
  email: OrderTypeEnum
  fname: OrderTypeEnum
  lname: OrderTypeEnum
  mname: OrderTypeEnum
  age: OrderTypeEnum
  phone: OrderTypeEnum
  is_active: OrderTypeEnum
  seniority_id: OrderTypeEnum
  avg: UserEntityOrderInputType
  sum: UserEntityOrderInputType
  count: UserEntityOrderInputType
  max: UserEntityOrderInputType
  min: UserEntityOrderInputType
}

input UserCompetencyEntityOrderInputType {
  competency: CompetencyEntityOrderInputType
  user: UserEntityOrderInputType
  id: OrderTypeEnum
  competency_id: OrderTypeEnum
  user_id: OrderTypeEnum
  created_at: OrderTypeEnum
  updated_at: OrderTypeEnum
  avg: UserCompetencyEntityOrderInputType
  sum: UserCompetencyEntityOrderInputType
  count: UserCompetencyEntityOrderInputType
  max: UserCompetencyEntityOrderInputType
  min: UserCompetencyEntityOrderInputType
}

enum OrderTypeEnum {
  desc
  desc_null_first
  desc_null_last
  asc
  asc_null_first
  asc_null_last
}

input UserSubcompetencyEntityOrderInputType {
  subcompetency: SubcompetencyEntityOrderInputType
  user: UserEntityOrderInputType
  id: OrderTypeEnum
  subcompetency_id: OrderTypeEnum
  user_id: OrderTypeEnum
  created_at: OrderTypeEnum
  updated_at: OrderTypeEnum
  avg: UserSubcompetencyEntityOrderInputType
  sum: UserSubcompetencyEntityOrderInputType
  count: UserSubcompetencyEntityOrderInputType
  max: UserSubcompetencyEntityOrderInputType
  min: UserSubcompetencyEntityOrderInputType
}

input SubcompetencyEntityOrderInputType {
  competency: CompetencyEntityOrderInputType
  user_subcompetencies: UserSubcompetencyEntityOrderInputType
  id: OrderTypeEnum
  title: OrderTypeEnum
  competency_id: OrderTypeEnum
  date_time_with_timezone: OrderTypeEnum
  created_at: OrderTypeEnum
  updated_at: OrderTypeEnum
  test_bool: OrderTypeEnum
  avg: SubcompetencyEntityOrderInputType
  sum: SubcompetencyEntityOrderInputType
  count: SubcompetencyEntityOrderInputType
  max: SubcompetencyEntityOrderInputType
  min: SubcompetencyEntityOrderInputType
}

input TaskEntityOrderInputType {
  assignee: UserEntityOrderInputType
  task: TaskEntityOrderInputType
  subtasks: TaskEntityOrderInputType
  id: OrderTypeEnum
  created_at: OrderTypeEnum
  updated_at: OrderTypeEnum
  title: OrderTypeEnum
  description: OrderTypeEnum
  type_id: OrderTypeEnum
  priority: OrderTypeEnum
  story_points: OrderTypeEnum
  status: OrderTypeEnum
  assignee_id: OrderTypeEnum
  task_id: OrderTypeEnum
  avg: TaskEntityOrderInputType
  sum: TaskEntityOrderInputType
  count: TaskEntityOrderInputType
  max: TaskEntityOrderInputType
  min: TaskEntityOrderInputType
}

type TaskPrimitiveFieldType {
  title: String
  description: String
  type_id: Float
  priority: Float
  story_points: Float
  status: Float
  assignee_id: Float
  task_id: Float
}

type TaskGroupType {
  by: TaskPrimitiveFieldType
  count: Float
  fields: [Task!]
  avg: TaskPrimitiveFieldType
  sum: TaskPrimitiveFieldType
  max: TaskPrimitiveFieldType
  min: TaskPrimitiveFieldType
}

type Task {
  id: Int!
  title: String!
  type_id: Int!
  priority: Int!
  story_points: Int!
  status: Int!
  assignee_id: Int
  assignee(where: AssigneeEntityFilterInputType, order_by: AssigneeEntityOrderInputType): User!
  task_id: Int
  created_at: String!
  updated_at: String!
  task(where: TaskEntityFilterInputType, order_by: TaskEntityOrderInputType): Task
  subtasks(where: TaskEntityFilterInputType, order_by: TaskEntityOrderInputType): [Task!]
  groupAgg: [TaskGroupType!]
}

input AssigneeEntityFilterInputType {
  and: [AssigneeEntityFilterInputType!]
  or: [AssigneeEntityFilterInputType!]
  avg: AssigneeEntityFilterInputType
  sum: AssigneeEntityFilterInputType
  count: AssigneeEntityFilterInputType
  max: AssigneeEntityFilterInputType
  min: AssigneeEntityFilterInputType
}

input AssigneeEntityOrderInputType {
  avg: AssigneeEntityOrderInputType
  sum: AssigneeEntityOrderInputType
  count: AssigneeEntityOrderInputType
  max: AssigneeEntityOrderInputType
  min: AssigneeEntityOrderInputType
}

type UserSubcompetencyPrimitiveFieldType {
  id: Float
  subcompetency_id: Float
  user_id: Float
  created_at: DateTime
  updated_at: DateTime
}

type UserSubcompetencyGroupType {
  by: UserSubcompetencyPrimitiveFieldType
  count: Float
  fields: [UserSubcompetency!]
  avg: UserSubcompetencyPrimitiveFieldType
  sum: UserSubcompetencyPrimitiveFieldType
  max: UserSubcompetencyPrimitiveFieldType
  min: UserSubcompetencyPrimitiveFieldType
}

type UserSubcompetency {
  id: Int!
  subcompetency_id: Int!
  user_id: Int!
  subcompetency(where: SubcompetencyEntityFilterInputType, order_by: SubcompetencyEntityOrderInputType): Subcompetency
  user(where: UserEntityFilterInputType, order_by: UserEntityOrderInputType): User
  created_at: String!
  updated_at: String!
  groupAgg: [UserSubcompetencyGroupType!]
}

type UserPrimitiveFieldType {
  identification_number: Float
  email: String
  fname: String
  lname: String
  mname: String
  age: Float
  phone: String
  is_active: Boolean
  seniority_id: Float
}

type UserGroupType {
  by: UserPrimitiveFieldType
  count: Float
  fields: [User!]
  avg: UserPrimitiveFieldType
  sum: UserPrimitiveFieldType
  max: UserPrimitiveFieldType
  min: UserPrimitiveFieldType
}

type User {
  id: Int!
  created_at: String!
  updated_at: String!
  identification_number: Int!
  email: String!
  fname: String!
  lname: String!
  mname: String!
  age: Float!
  phone: String!
  is_active: Boolean!
  seniority_id: Int!
  seniority(where: SeniorityEntityFilterInputType, order_by: SeniorityEntityOrderInputType): Seniority
  user_competencies(where: UserCompetencyEntityFilterInputType, order_by: UserCompetencyEntityOrderInputType): [UserCompetency!]
  user_subcompetencies(where: UserSubcompetencyEntityFilterInputType, order_by: UserSubcompetencyEntityOrderInputType): [UserSubcompetency!]
  tasks(where: TaskEntityFilterInputType, order_by: TaskEntityOrderInputType): [Task!]
  groupAgg: [UserGroupType!]
}

type UserCompetencyPrimitiveFieldType {
  id: Float
  competency_id: Float
  user_id: Float
  created_at: DateTime
  updated_at: DateTime
}

type UserCompetencyGroupType {
  by: UserCompetencyPrimitiveFieldType
  count: Float
  fields: [UserCompetency!]
  avg: UserCompetencyPrimitiveFieldType
  sum: UserCompetencyPrimitiveFieldType
  max: UserCompetencyPrimitiveFieldType
  min: UserCompetencyPrimitiveFieldType
}

type UserCompetency {
  id: Int!
  competency_id: Int!
  user_id: Int!
  competency(where: CompetencyEntityFilterInputType, order_by: CompetencyEntityOrderInputType): Competency
  user(where: UserEntityFilterInputType, order_by: UserEntityOrderInputType): User
  created_at: String!
  updated_at: String!
  groupAgg: [UserCompetencyGroupType!]
}

type DeleteCompetencyResult {
  id: Float
  affectedRows: Float
}

type CompetencyPrimitiveFieldType {
  id: Float
  title: String
  seniority_id: Float
}

type CompetencyGroupType {
  by: CompetencyPrimitiveFieldType
  count: Float
  fields: [Competency!]
  avg: CompetencyPrimitiveFieldType
  sum: CompetencyPrimitiveFieldType
  max: CompetencyPrimitiveFieldType
  min: CompetencyPrimitiveFieldType
}

type Competency {
  id: Int!
  title: String!
  seniority_id: Int!
  seniority(where: SeniorityEntityFilterInputType, order_by: SeniorityEntityOrderInputType): Seniority!
  subcompetencies(where: SubcompetencyEntityFilterInputType, order_by: SubcompetencyEntityOrderInputType): [Subcompetency!]
  user_competencies(where: UserCompetencyEntityFilterInputType, order_by: UserCompetencyEntityOrderInputType): [UserCompetency!]
  groupAgg: [CompetencyGroupType!]
}

type SeniorityPrimitiveFieldType {
  id: Float
  title: String
}

type SeniorityGroupType {
  by: SeniorityPrimitiveFieldType
  count: Float
  fields: [Seniority!]
  avg: SeniorityPrimitiveFieldType
  sum: SeniorityPrimitiveFieldType
  max: SeniorityPrimitiveFieldType
  min: SeniorityPrimitiveFieldType
}

type Seniority {
  id: Int!
  title: String!
  competencies(where: CompetencyEntityFilterInputType, order_by: CompetencyEntityOrderInputType): [Competency!]
  users(where: UserEntityFilterInputType, order_by: UserEntityOrderInputType): [User!]
  groupAgg: [SeniorityGroupType!]
}

type CustomerPrimitiveFieldType {
  id: Float
  created_at: DateTime
  updated_at: DateTime
  name: String
}

type CustomerGroupType {
  by: CustomerPrimitiveFieldType
  count: Float
  fields: [Customer!]
  avg: CustomerPrimitiveFieldType
  sum: CustomerPrimitiveFieldType
  max: CustomerPrimitiveFieldType
  min: CustomerPrimitiveFieldType
}

type Customer {
  id: Int!
  created_at: String!
  updated_at: String!
  name: String!
  groupAgg: [CustomerGroupType!]
}

type Query {
  seniorities(where: SeniorityEntityFilterInputType, order_by: SeniorityEntityOrderInputType, paginate: PaginationInputType): [Seniority!]!
  competencies(where: CompetencyEntityFilterInputType, order_by: CompetencyEntityOrderInputType, paginate: PaginationInputType): [Competency!]!
  test: [Subcompetency!]!
  subcompetencies(where: SubcompetencyEntityFilterInputType, order_by: SubcompetencyEntityOrderInputType, paginate: PaginationInputType): [Subcompetency!]!
  users(where: UserEntityFilterInputType, order_by: UserEntityOrderInputType, paginate: PaginationInputType): [User!]!
  usercompetencies(where: UserCompetencyEntityFilterInputType, order_by: UserCompetencyEntityOrderInputType, paginate: PaginationInputType): [UserCompetency!]!
  usersubcompetencies(where: UserSubcompetencyEntityFilterInputType, order_by: UserSubcompetencyEntityOrderInputType, paginate: PaginationInputType): [UserSubcompetency!]!
  tasks(where: TaskEntityFilterInputType, order_by: TaskEntityOrderInputType, paginate: PaginationInputType): [Task!]!
  customers(where: CustomerEntityFilterInputType, order_by: CustomerEntityOrderInputType, paginate: PaginationInputType): [Customer!]!
}

input PaginationInputType {
  page: Float!
  per_page: Float!
}

input CustomerEntityFilterInputType {
  id: Number_property_filter_type
  created_at: DateTime_property_filter_type
  updated_at: DateTime_property_filter_type
  name: String_property_filter_type
  and: [CustomerEntityFilterInputType!]
  or: [CustomerEntityFilterInputType!]
  avg: CustomerEntityFilterInputType
  sum: CustomerEntityFilterInputType
  count: CustomerEntityFilterInputType
  max: CustomerEntityFilterInputType
  min: CustomerEntityFilterInputType
}

input CustomerEntityOrderInputType {
  id: OrderTypeEnum
  created_at: OrderTypeEnum
  updated_at: OrderTypeEnum
  name: OrderTypeEnum
  avg: CustomerEntityOrderInputType
  sum: CustomerEntityOrderInputType
  count: CustomerEntityOrderInputType
  max: CustomerEntityOrderInputType
  min: CustomerEntityOrderInputType
}

type Mutation {
  updateCompetency(competency: UpdateCompetency!): Competency!
  createCompetency(competency: CreateCompetency!): Competency!
  deleteCompetency(id: Float!): DeleteCompetencyResult!
  createCustomer(customer: CreateCustomerDTO!): Customer!
  updateCustomer(customer: UpdateCustomerDTO!): Customer!
  deleteCustomer(customer: DeleteDTO!): Customer!
}

input UpdateCompetency {
  seniority_id: Float
  title: String!
  id: Float!
}

input CreateCompetency {
  seniority_id: Float!
  title: String!
}

input CreateCustomerDTO {
  name: String!
}

input UpdateCustomerDTO {
  id: Float!
  name: String!
}

input DeleteDTO {
  id: Float!
}

type Subscription {
  SeniorityCreateSubscriber: Seniority!
  SeniorityUpdateSubscriber: Seniority!
  SeniorityDeleteSubscriber: Seniority!
  CompetencyCreateSubscriber: Competency!
  CompetencyUpdateSubscriber: Competency!
  CompetencyDeleteSubscriber: Competency!
  SubcompetencyCreateSubscriber: Subcompetency!
  SubcompetencyUpdateSubscriber: Subcompetency!
  SubcompetencyDeleteSubscriber: Subcompetency!
  UserCreateSubscriber: User!
  UserUpdateSubscriber: User!
  UserDeleteSubscriber: User!
  UserCompetencyCreateSubscriber: UserCompetency!
  UserCompetencyUpdateSubscriber: UserCompetency!
  UserCompetencyDeleteSubscriber: UserCompetency!
  UserSubcompetencyCreateSubscriber: UserSubcompetency!
  UserSubcompetencyUpdateSubscriber: UserSubcompetency!
  UserSubcompetencyDeleteSubscriber: UserSubcompetency!
  TaskCreateSubscriber: Task!
  TaskUpdateSubscriber: Task!
  TaskDeleteSubscriber: Task!
  CustomerCreateSubscriber: Customer!
  CustomerUpdateSubscriber: Customer!
  CustomerDeleteSubscriber: Customer!
}
